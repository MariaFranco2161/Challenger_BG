{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2024-10-03T02:55:54.282Z",
    "end": "2024-10-03T02:55:54.741Z",
    "duration": 459,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4dd19713-14f7-49e4-87d4-34903b3405b5",
      "title": "",
      "fullFile": "cypress/api/withdraw.spec.js",
      "file": "cypress/api/withdraw.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b7716170-246d-4e0a-b571-330ba2698178",
          "title": "API Tests - Withdraw",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "debería retirar dinero con éxito de una cuenta",
              "fullTitle": "API Tests - Withdraw debería retirar dinero con éxito de una cuenta",
              "timedOut": null,
              "duration": 205,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Realiza la solicitud a la API de retiro\ncy.fixture('accountData').then(withdraw => {\n  cy.request({\n    method: 'POST',\n    url: `https://parabank.parasoft.com/parabank/services/bank/withdraw?accountId=${withdraw.account}&amount=${withdraw.amount}`,\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(response => {\n    // Verifica que la respuesta tenga un código de estado 200 o el estado adecuado\n    expect(response.status).to.eq(200); // Ajusta esto si el código de estado esperado es diferente\n    // Verifica que la respuesta contenga los datos esperados\n    expect(response.body).to.include('Successfully'); // Ajusta según la respuesta real\n    // Si la API devuelve información sobre el saldo o la cuenta después del retiro, puedes verificar eso también\n    //expect(response.body).to.have.property('accountId', accountId);\n  });\n});",
              "err": {},
              "uuid": "9f4f8585-fc18-4bae-a31e-5111e2aba9bf",
              "parentUUID": "b7716170-246d-4e0a-b571-330ba2698178",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "debería validar si la cuenta existe",
              "fullTitle": "API Tests - Withdraw debería validar si la cuenta existe",
              "timedOut": null,
              "duration": 207,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('accountData').then(withdraw => {\n  cy.request({\n    method: 'POST',\n    url: `https://parabank.parasoft.com/parabank/services/bank/withdraw?accountId=${withdraw.accountNotFound}&amount=${withdraw.amount}`,\n    failOnStatusCode: false,\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(response => {\n    // Verifica que la respuesta tenga un código de estado 200 o el estado adecuado\n    expect(response.status).to.eq(400); // Ajusta esto si el código de estado esperado es diferente\n    // Verifica que la respuesta contenga los datos esperados\n    expect(response.body).to.include('Could not find account number'); // Ajusta según la respuesta real\n  });\n});",
              "err": {},
              "uuid": "f5378308-bc32-4492-a8ba-effa7d91855f",
              "parentUUID": "b7716170-246d-4e0a-b571-330ba2698178",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9f4f8585-fc18-4bae-a31e-5111e2aba9bf",
            "f5378308-bc32-4492-a8ba-effa7d91855f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 412,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true,
        "timestamp": "yyyy-mm-dd_HH-MM-ss"
      },
      "version": "6.2.0"
    }
  }
}